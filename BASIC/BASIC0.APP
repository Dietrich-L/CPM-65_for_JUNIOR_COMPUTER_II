;BASIC0.APP  JC II Version
;BASIC.COM  Microsoft compatible 6502 BASIC
;APPEND FILE 0
;D. Lausberg	(c) 2025
;V1.0	11.06.25

ANALYZE	JSR IN_TERM		;ANALYZE TERM
CHK_NUM	CLC
	DB BIT_Z
CHK_NU1	SEC
CHK_NUX	BIT VAR_F
	BMI CHK_NU2
	BCS TM_ERR
CHK_NU3	RTS
CHK_NU2	BCS CHK_NU3

TM_ERR	LDX #ERR12-ERR_TAB	;TYPE MISMATCH ERROR
TM_ERR1	JMP ERROR


IN_TERM	LDX CHRGTP		;INPUT AND ANALYZE TERM
	BNE IN_TER1
	DEC CHRGTP+1
IN_TER1	DEC CHRGTP
	LDX #0
	DB BIT_Z
IN_TER2	PHA
	TXA
	PHA
	LDA #1
	JSR STK_CHK		;STACK CHECK
	JSR ANA_ARG		;ANALYSE ARGUMENT
	LDA #0
	STA OPMSK
IN_TER3	JSR GETCHR1
IN_TER4	SEC
	SBC #$B1
	BCC IN_TER5		;CHECK FOR < = >
	CMP #3
	BCS IN_TER5
	CMP #1
	ROL A
	EOR #$01
	EOR OPMSK
	CMP OPMSK
	BCC J_SYNER
	STA OPMSK
	JSR GETCHR
	JMP IN_TER4

IN_TER5	LDX OPMSK
	BNE IN_TER6
	BCS P_ARG8
	ADC #7
	BCC P_ARG8
	ADC VAR_F
	BNE IN_TER7
	JMP CONCAT		;DO STRING CONCATENATION

IN_TER7	ADC #$FF
	STA T_PNT
	ASL A
	ADC T_PNT
	TAY
IN_TERB	PLA
	CMP OP_TAB,Y
IN_TER8	BCS P_ARG9
	JSR CHK_NUM
IN_TERC	PHA
IN_TERD	JSR P_ARG
	PLA
	LDY AOPER
	BPL IN_TER9
	TAX
	BEQ P_ARG10
	BNE P_ARG11

IN_TER6	LSR VAR_F
	TXA
	ROL A
	LDX CHRGTP
	BNE IN_TERA
	DEC CHRGTP+1
IN_TERA	DEC CHRGTP
	LDY #$1B
	STA OPMSK
	BNE IN_TERB
IN_TER9	CMP OP_TAB,Y
	BCS P_ARG11
	BCC IN_TERC


P_ARG	LDA OP_TAB+2,Y		;PUSH ARGUMENT ON STACK
	PHA
	LDA OP_TAB+1,Y
	PHA
	JSR DOIT
	LDA OPMSK
	JMP IN_TER2

J_SYNER	JMP SYN_ERR


DOIT	LDA F_ACCU1+5
	LDX OP_TAB,Y
DOIT1	TAY
	PLA
	STA T_PNT
	INC T_PNT
	PLA
	STA T_PNT+1
	TYA
	PHA
DOIT2	JSR A1RND
	LDA F_ACCU1+4
	PHA
	LDA F_ACCU1+3
	PHA
	LDA F_ACCU1+2
	PHA
	LDA F_ACCU1+1
	PHA
	LDA F_ACCU1
	PHA
	JMP (T_PNT)

P_ARG8	LDY #$FF
	PLA
P_ARG10	BEQ P_ARG1
P_ARG9	CMP #$64
	BEQ P_ARG2
	JSR CHK_NUM
P_ARG2	STY AOPER
P_ARG11	PLA
	LSR A
	STA SGN_F
	PLA
	STA F_ACCU2
	PLA
	STA F_ACCU2+1
	PLA
	STA F_ACCU2+2
	PLA
	STA F_ACCU2+3
	PLA
	STA F_ACCU2+4
	PLA
	STA F_ACCU2+5
	EOR F_ACCU1+5
	STA F_ACCU2+6
P_ARG1	LDA F_ACCU1
	RTS


ANA_ARG	LDA #0			;ANALYZE ARGUMENTS
	STA VAR_F
ANAARG3	JSR GETCHR
	BCS ANAARG1
ANAARG2	JMP STR_VAL
ANAARG1	JSR CHK_LET		;CHECK FOR LETTER
	BCS S_BVAR
CHK_ST	CMP #'.			;CHECK STATEMENT FOR +-."
	BEQ ANAARG2
	CMP #'+'+$80
	BEQ CHK_STE
	CMP #'*'+$80
	BEQ ANAARG3
	CMP #'"
	BNE CHK_ST3
CHK_ST1	LDA CHRGTP
	LDY CHRGTP+1
	ADC #0
	BCC CHK_ST2
	INY
CHK_ST2	JSR S_STR
	JMP VAL8

CHK_ST3	CMP #'('+$80
	BNE CHK_FN
	LDY #$18
	BNE CHKSTE1


NOT	JSR F_INT1		;NOT COMMAND
	LDA F_ACCU1+4
	EOR #$FF
	TAY
	LDA F_ACCU1+3
	EOR #$FF
	JMP INT_FLT


CHK_FN	CMP #$A5		;CHECK FUNCTION
	BNE CHK_FN1		;FN TOKEN
	JMP FN_ANA

CHK_FN1	CMP #$B4		;SGN TOKEN
	BCC CHK_TRM
	JMP C_FTYP
CHK_TRM JSR CHK_28
	JSR IN_TERM
CHK_29	LDA #')
	DB BIT_ABS
CHK_28	LDA #'(
	DB BIT_ABS
CHK_KM	LDA #',
CHK_CHR	LDY #0
	CMP (CHRGTP),Y
	BNE SYN_ERR
	JMP GETCHR

SYN_ERR	LDX #ERR1-ERR_TAB	;SYNTAX ERROR
	JMP ERROR


CHK_STE	LDY #$15		;CHECK STATEMENT FOR ERRORS
CHKSTE1	PLA
	PLA
	JMP IN_TERD


S_BVAR	JSR S_VAR		;SEARCH BASIC VARIABLE
	STA F_ACCU1+3		;VAR NAME POINTER = CHRGTP
	STY F_ACCU1+4		;VAR NAME = VNAME
	LDA VNAME		;VAR ADR = VPNT
	LDY VNAME+1
	LDX VAR_F
	BEQ SBVAR1
	LDX #0
	STX ARND
	BIT F_ACCU1+4
	BMI SBVARX		;If VAR ADR in system area
	CMP #'T			;CHECK FOR TI, TI$ AND ST
	BNE SBVARX
	CPY #'I'+$80
	BNE SBVARX
	JSR SBVAR2
	STY BUF2+2
	DEY
	STY P_FUNC
	LDY #6
	STY BUF2+1
	LDY #$24
	JSR FLTASCA
	JMP STR@1

SBVARX	RTS

SBVAR1	LDX INT_F
	BPL SBVAR3
	LDY #0
	LDA (F_ACCU1+3),Y
	TAX
	INY
	LDA (F_ACCU1+3),Y
	TAY
	TXA
	JMP INT_FLT

SBVAR3	BIT F_ACCU1+4
	BMI SBVAR4		;if VAR ADR in system area
	CMP #'T
	BNE SBVAR5
	CPY #'I
	BNE SBVAR4
	JSR SBVAR2
	TYA
	LDX #$A0
	JMP INT_F1

SBVAR2	LDA #CLOCK-2
	LDY #CLOCK-2/256
	SEI
	JSR FIL_A1
	CLI
	STY F_ACCU1+1
	RTS

SBVAR5	CMP #'S
	BNE SBVAR4
	CPY #'T
	BNE SBVAR4
	LDA STATUS
	JMP BYT_FLT

SBVAR4	CMP #'P
	BNE SBVAR6
	CPY #'I
	BNE SBVAR6
	LDA #PI
	LDY #PI/256
	JMP FIL_A1		;FILL ACCU 1 WITH PI

SBVAR6	LDA F_ACCU1+3
	LDY F_ACCU1+4
	JMP FIL_A1


C_FTYP	ASL A			;CHECK FUNCTION TYPE
	PHA
	TAX
	JSR GETCHR
	CPX #$8F		;REM?
	BCC C_FTYP1
	JSR CHK_28
	JSR IN_TERM
	JSR CHK_KM
	JSR CHK_NU1
	PLA
	TAX
	LDA F_ACCU1+4
	PHA
	LDA F_ACCU1+3
	PHA
	TXA
	PHA
	JSR TRMCALC
	PLA
	TAY
	TXA
	PHA
	JMP C_FTYP2

C_FTYP1	JSR CHK_TRM
	PLA
	TAY
C_FTYP2	LDA COM_TAB-$22,Y
	STA J_FN+1
	LDA COM_TAB-$21,Y
	STA J_FN+2
	JSR J_FN		;JUMP TO BASIC FUNCTION
	JMP CHK_NUM


OR	LDY #$FF		;OR COMMAND
	DB BIT_ABS
AND	LDY #0			;AND COMMAND
	STY INBUFP
	JSR F_INT1
	LDA F_ACCU1+3
	EOR INBUFP
	STA SRC_CHR
	LDA F_ACCU1+4
	EOR INBUFP
	STA SRC_CHR+1
	JSR A2_A1
	JSR F_INT1
	LDA F_ACCU1+4
	EOR INBUFP
	AND SRC_CHR+1
	EOR INBUFP
	TAY
	LDA F_ACCU1+3
	EOR INBUFP
	AND SRC_CHR
	EOR INBUFP
	JMP INT_FLT


COMP	JSR CHK_NUX			;COMPARE
	BCS COMP1
	LDA F_ACCU2+5
	ORA #$7F
	AND F_ACCU2+1
	STA F_ACCU2+1
	LDA #F_ACCU2
	LDY #F_ACCU2/256
	JSR COMP_A1
	TAX
	JMP COMP2

COMP1	LDA #0
	STA VAR_F
	DEC OPMSK
	JSR GARCOL1
	STA F_ACCU1
	STX F_ACCU1+1
	STY F_ACCU1+2
	LDA F_ACCU2+3
	LDY F_ACCU2+4
	JSR GARCOL2
	STX F_ACCU2+3
	STY F_ACCU2+4
	TAX
	SEC
	SBC F_ACCU1
	BEQ COMP3
	LDA #1
	BCC COMP3
	LDX F_ACCU1
	LDA #$FF
COMP3	STA F_ACCU1+5
	LDY #$FF
	INX
COMP6	INY
	DEX
	BNE COMP4
	LDX F_ACCU1+5
COMP2	BMI COMP5
	CLC
	BCC COMP5
COMP4	LDA (F_ACCU2+3),Y
	CMP (F_ACCU1+1),Y
	BEQ COMP6
	LDX #$FF
	BCS COMP5
	LDX #1
COMP5	INX
	TXA
	ROL A
	AND SGN_F
	BEQ COMP7
	LDA #$FF
COMP7	JMP BYT_FLT


DIM0	JSR CHK_KM		;DIM COMMAND
DIM	TAX
	JSR S_VAR1
	JSR GETCHR1
	BNE DIM0
	RTS


S_VAR	LDX #0			;SEARCH VARABLE
	JSR GETCHR1
S_VAR1	STX DIMBUF
S_VAR2	STA VNAME
	JSR GETCHR1
	JSR CHK_LET
	BCS S_VAR3
S_VERR	JMP SYN_ERR

S_VAR3	LDX #0
	STX VAR_F
	STX INT_F
	JSR GETCHR
	BCC S_VAR4
	JSR CHK_LET
	BCC S_VAR5
S_VAR4	TAX
S_VAR6	JSR GETCHR
	BCC S_VAR6
	JSR CHK_LET
	BCS S_VAR6
S_VAR5	CMP #'$
	BNE S_VAR7
	LDA #$FF
	STA VAR_F
	BNE S_VAR8

S_VAR7	CMP #'%
	BNE S_VAR9
	LDA DIM_F
	BNE S_VERR
	LDA #$80
	STA INP_F
	ORA VNAME
	STA VNAME
S_VAR8	TXA
	ORA #$80
	TAX
	JSR GETCHR
S_VAR9	STX VNAME+1
	SEC
	ORA DIM_F
	SBC #'(
	BNE S_VAR10
	JMP S_FLD

S_VAR10	LDA #0
	STA DIM_F
	LDA VTBEG
	LDX VTBEG+1
	LDY #0
S_VAR14	STX BEGAD+1
S_VAR13	STA BEGAD
	CPX ATBEG+1
	BNE S_VAR11
	CMP ATBEG
	BEQ M_VAR
S_VAR11	LDA VNAME
	CMP (BEGAD),Y
	BNE S_VAR12
	LDA VNAME+1
	INY
	CMP (BEGAD),Y
	BEQ P_VARP
	DEY
S_VAR12	CLC
	LDA BEGAD
	ADC #7
	BCC S_VAR13
	INX
	BNE S_VAR14


CHK_LET	CMP #'A			;CHECK FOR A LETTER
	BCC CHKLETX
	SBC #'[
	SEC
	SBC #$A5
CHKLETX	RTS


M_VAR	PLA			;MAKE ROOM FOR VARABLE
	PHA
	CMP #S_BVAR+2		
	BNE MVAR1
MVAR3	LDA #CON_TAB+2		;CON_TAB+2 ???
	LDY #CON_TAB+2/256
	RTS

MVAR1	LDA VNAME
	LDY VNAME+1
	CMP #'T
	BNE MVAR2
	CPY #'I'+$80
	BEQ MVAR3
	CPY #'I
	BNE MVAR2
MVAR5	JMP SYN_ERR
MVAR2	CMP #'S
	BNE MVAR4
	CPY #'T
	BEQ MVAR5
MVAR4	LDA ATBEG
	LDY ATBEG+1
	STA BEGAD
	STY BEGAD+1
	LDA VTEND
	LDY VTEND+1
	STA ENDAD
	STY ENDAD+1
	CLC
	ADC #7
	BCC MVAR6
	INY
MVAR6	STA TARGAD
	STY TARGAD+1
	JSR M_ROOM
	LDA TARGAD
	LDY TARGAD+1
	INY
	STA ATBEG
	STY ATBEG+1
	LDY #0
	LDA VNAME
	STA (BEGAD),Y
	INY
	LDA VNAME+1
	STA (BEGAD),Y

RESVAR	LDA #0			;RESET VARIABLE=0
RESVAR1	INY
	STA (BEGAD),Y
	CPY #6
	BCC RESVAR1

P_VARP	LDA BEGAD		;PUSH VAR POINTER TO VPNT
	CLC
	ADC #2
	LDY BEGAD+1
	BCC PVARP1
	INY
PVARP1	STA VPNT
	STY VPNT+1
	RTS


S_FLDH	LDA INBUFP		;SEARCH IN A FIELD HELP ROUTINE
	ASL A
	ADC #5
	ADC BEGAD
	LDY BEGAD+1
	BCC SFLDH1
	INY
SFLDH1	STA TARGAD
	STY TARGAD+1
	RTS


NR_INT	JSR GETCHR		;GET BASIC NR AND CONVERT TO INT
	JSR IN_TERM
NR_INT1	JSR CHK_NUM

F_INT	LDA F_ACCU1+5		;FLT TO 16 BIT INTEGER
	BMI F_INT2
F_INT1	LDA F_ACCU1
	CMP #$90
	BCC F_INT3
	LDA #M32768
	LDY #M32768/256
	JSR COMP_A1
F_INT2	BNE ILLQ_ERR
F_INT3	JMP FN_INT
	

S_FLD	LDA DIMBUF		;SEARCH FIELD
	ORA INT_F
	PHA
	LDA VAR_F
	PHA
	LDY #0
S_FLD1	TYA
	PHA
	LDA VNAME+1
	PHA
	LDA VNAME
	PHA
	JSR NR_INT
	PLA
	STA VNAME
	PLA
	STA VNAME+1
	PLA
	TAY
	TSX
	LDA STACK+2,X
	PHA
	LDA STACK+1,X
	PHA
	LDA F_ACCU1+3
	STA STACK+2,X
	LDA F_ACCU1+4
	STA STACK+1,X
	INY
	JSR GETCHR1
	CMP #',
	BEQ S_FLD1
	STY INBUFP
	JSR CHK_29
	PLA
	STA VAR_F
	PLA
	STA INT_F
	AND #$7F
	STA DIMBUF
	LDA ATBEG+1
	LDX ATBEG
S_FLD5	STA BEGAD+1
	STX BEGAD
	CMP VTEND+1
	BNE S_FLD2
	CPX VTEND
	BEQ S_FLD3
S_FLD2	LDY #0
	LDA (BEGAD),Y
	INY
	CMP VNAME
	BNE S_FLD4
	LDA VNAME+1
	CMP (BEGAD),Y
	BEQ RDA_ERR
S_FLD4	INY
	LDA (BEGAD),Y
	CLC
	ADC BEGAD
	TAX
	INY
	LDA (BEGAD),Y
	ADC BEGAD+1
	BCC S_FLD5
BS_ERR	LDX #ERR8-ERR_TAB	;BAD SUBSCRIPT ERROR
	DB BIT_ABS
ILLQ_ERR LDX #ERR4-ERR_TAB	;ILLEGAL QUANTITY ERROR
A_ERR	JMP ERROR

RDA_ERR	LDX #ERR9-ERR_TAB	;REDIM'D ARRAY ERROR
	LDA DIMBUF
	BNE A_ERR
	JSR S_FLDH
	LDA INBUFP
	LDY #4
	CMP (BEGAD),Y
	BNE BS_ERR
	JMP S_FLD10

S_FLD3	JSR S_FLDH
	JSR GARBCOL
	LDA #0
	TAY
	STA P_FUNC+1
	LDX #5
	LDA VNAME
	STA (BEGAD),Y
	BPL S_FLD6
	DEX
S_FLD6	INY
	LDA VNAME+1
	STA (BEGAD),Y
	BPL S_FLD7
	DEX
	DEX
S_FLD7	STX P_FUNC
	LDA INBUFP
	INY
	INY
	INY
	STA (BEGAD),Y
S_FLD9	LDX #11
	LDA #0
	BIT DIMBUF
	BVC S_FLD8
	PLA
	CLC
	ADC #1
	TAX
	PLA
	ADC #0
S_FLD8	INY
	STA (BEGAD),Y
	INY
	TXA
	STA (BEGAD),Y
	JSR S_FLD20
	STX P_FUNC
	STA P_FUNC+1
	LDY T_PNT
	DEC INBUFP
	BNE S_FLD9
	ADC TARGAD+1
	BCS S_FLD11
	STA TARGAD+1
	TAY
	TXA
	ADC TARGAD
	BCC S_FLD12
	INY
	BEQ S_FLD11
S_FLD12	JSR GARBCOL
	STA VTEND
	STY VTEND+1
	LDA #0
	INC P_FUNC+1
	LDY P_FUNC
	BEQ S_FLD14
S_FLD13	DEY
	STA (TARGAD),Y
	BNE S_FLD13
S_FLD14	DEC TARGAD+1
	DEC P_FUNC+1
	BNE S_FLD13
	INC TARGAD+1
	SEC
	LDA VTEND
	SBC BEGAD
	LDY #2
	STA (BEGAD),Y
	LDA VTEND+1
	SBC BEGAD+1
	INY
	STA (BEGAD),Y
	LDA DIMBUF
	BNE S_FLD19
	INY
S_FLD10	LDA (BEGAD),Y
	STA INBUFP
	LDA #0
	STA P_FUNC
S_FLD21	STA P_FUNC+1
	INY
	PLA
	TAX
	STA F_ACCU1+3
	PLA
	STA F_ACCU1+4
	CMP (BEGAD),Y
	BCC S_FLD15
	BNE S_FLD16
	INY
	TXA
	CMP (BEGAD),Y
	BCC S_FLD17
S_FLD16	JMP BS_ERR
S_FLD11	JMP OM_ERR
S_FLD15	INY
S_FLD17	LDA P_FUNC+1
	ORA P_FUNC
	CLC
	BEQ S_FLD18
	JSR S_FLD20
	TXA
	ADC F_ACCU1+3
	TAX
	TYA
	LDY T_PNT
S_FLD18	ADC F_ACCU1+4
	STX P_FUNC
	DEC INBUFP
	BNE S_FLD21
	STA P_FUNC+1
	LDX #5
	LDA VNAME
	BPL S_FLD22
	DEX
S_FLD22	LDA VNAME+1
	BPL S_FLD23
	DEX
	DEX
S_FLD23	STX REG+2
	LDA #0
	JSR S_FLD24
	TXA
	ADC TARGAD
	STA VPNT
	TYA
	ADC TARGAD+1
	STA VPNT+1
	TAY
	LDA VPNT
S_FLD19	RTS

S_FLD20	STY T_PNT
	LDA (BEGAD),Y
	STA REG+2
	DEY
	LDA (BEGAD),Y
S_FLD24	STA REG+3
	LDA #$10
	STA BUF2+1
	LDX #0
	LDY #0
S_FLD26	TXA
	ASL A
	TAX
	TYA
	ROL A
	TAY
	BCS S_FLD11
	ASL P_FUNC
	ROL P_FUNC+1
	BCC S_FLD25
	CLC
	TXA
	ADC REG+2
	TAX
	TYA
	ADC REG+3
	TAY
	BCS S_FLD11
S_FLD25	DEC BUF2+1
	BNE S_FLD26
	RTS


FRE	LDA VAR_F		;FRE COMMAND
	BEQ FRE1
	JSR GARCOL1
FRE1	JSR RM_STR
	SEC
	LDA STREND
	SBC VTEND
	TAY
	LDA STREND+1
	SBC VTEND+1


INT_FLT	LDX #0			;CONVERT INT TO FLOAT
	STX VAR_F
	STA F_ACCU1+1
	STY F_ACCU1+2
	LDX #$90
	JMP BYTFLT1


POS	LDY CUR_COL		;POS COMMAND
POS1	LDA #0
	BEQ INT_FLT


DIR_TST	LDX DIRECT_F		;TEST FOR DIRECT MODE
	INX
	BNE S_FLD19		;RTS
	LDX #ERR11-ERR_TAB	;ILLEGAL DIRECT ERROR
	DB BIT_ABS
UDFERR	LDX #ERR17-ERR_TAB	;UNDEFINED FUNCTION ERROR
	JMP ERROR


DEF	JSR FN_SYN		;DEFINE FUNCTION COMMAND
	JSR DIR_TST
	JSR CHK_28
	LDA #$80
	STA DIM_F
	JSR S_VAR
	JSR CHK_NUM
	JSR CHK_29
	LDA #$B2		;=
	JSR CHK_CHR
	PHA
	LDA VPNT+1
	PHA
	LDA VPNT
	PHA
	LDA CHRGTP+1
	PHA
	LDA CHRGTP
	PHA
	JSR DATA
	JMP FNANA10


FN_SYN	LDA #$A5		;CHECK FOR FN SYNTAX
	JSR CHK_CHR
	ORA #$80
	STA DIM_F
	JSR S_VAR2
	STA DEFPNT
	STY DEFPNT+1
	JMP CHK_NUM


FN_ANA	JSR FN_SYN		;ANALYZE FN
	LDA DEFPNT+1
	PHA
	LDA DEFPNT
	PHA
	JSR CHK_TRM
	JSR CHK_NUM
	PLA
	STA DEFPNT
	PLA
	STA DEFPNT+1
	LDY #2
	LDA (DEFPNT),Y
	STA VPNT
	TAX
	INY
	LDA (DEFPNT),Y
	BEQ UDFERR
	STA VPNT+1
	INY
FNANA1	LDA (VPNT),Y
	PHA
	DEY
	BPL FNANA1
	LDY VPNT+1
	JSR A1_FOR1
	LDA CHRGTP+1
	PHA
	LDA CHRGTP
	PHA
	LDA (DEFPNT),Y
	STA CHRGTP
	INY
	LDA (DEFPNT),Y
	STA CHRGTP+1
	LDA VPNT+1
	PHA
	LDA VPNT
	PHA
	JSR ANALYZE
	PLA
	STA DEFPNT
	PLA
	STA DEFPNT+1
	JSR GETCHR1
	BEQ FNANA2
	JMP SYN_ERR

FNANA2	PLA
	STA CHRGTP
	PLA
	STA CHRGTP+1
FNANA10	LDY #0
FNANA3	PLA
	STA (DEFPNT),Y
	INY
	CPY #5
	BCC FNANA3
	RTS


STR@	JSR CHK_NUM		;STR$ COMMAND
	LDY #0
	JSR FLTASC1
	PLA
	PLA
STR@1	LDA #$FF
	LDY #0
	BEQ S_STR


G_STRP	LDX F_ACCU1+3		;GET STRING POINTER
	LDY F_ACCU1+4
	STX GCMEM
	STY GCMEM+1
GSTRP1	JSR G_CHRP
	STX F_ACCU1+1
	STY F_ACCU1+2
	STA F_ACCU1
	RTS


S_STR	LDX #'"			;SEARCH STRING
	STX SRC_CHR
	STX HK_F
S_STR1	STA ACOMP
	STY ACOMP+1
	STA F_ACCU1+1
	STY F_ACCU1+2
	LDY #$FF
S_STR3	INY
	LDA (ACOMP),Y
	BEQ S_STR2
	CMP SRC_CHR
	BEQ S_STR4
	CMP HK_F
	BNE S_STR3
S_STR4	CMP #'"
	BEQ S_STR5
S_STR2	CLC
S_STR5	STY F_ACCU1
	TYA
	ADC ACOMP
	STA P_FUNC
	LDX ACOMP+1
	BCC S_STR6
	INX
S_STR6	STX P_FUNC+1
	LDA ACOMP+1
	BEQ S_STR7
	CMP #2
	BNE S_STR10
S_STR7	TYA
	JSR G_STRP
	LDX ACOMP
	LDY ACOMP+1
	JSR P_STR
S_STR10	LDX DES_PNT
	CPX #$1F
	BNE S_STR8
	LDX #ERR15-ERR_TAB	;FORMULA TOO COMPLEX
S_STR9	JMP ERROR

S_STR8	LDA F_ACCU1
	STA ZERO,X
	LDA F_ACCU1+1
	STA ZERO+1,X
	LDA F_ACCU1+2
	STA ZERO+2,X
	LDY #0
	STX F_ACCU1+3
	STY F_ACCU1+4
	STY ACOMP+1
	DEY
	STY VAR_F
	STX L_STRP
	INX
	INX
	INX
	STX DES_PNT
	RTS


G_CHRP	LSR DATA_F		;GET CHR CHAIN POINTER
GCHRP4	PHA
	EOR #$FF
	SEC
	ADC STREND
	LDY STREND+1
	BCS GCHRP1
	DEY
GCHRP1	CPY VTEND+1
	BCC GCHRP2
	BNE GCHRP3
	CMP VTEND
	BCC GCHRP2
GCHRP3	STA STREND
	STY STREND+1
	STA STRBEG
	STY STRBEG+1
	TAX
	PLA
	RTS

GCHRP2	LDX #ERR6-ERR_TAB
	STA DATA_F
	BMI S_STR9
	JSR RM_STR
	LDA #$80
	STA DATA_F
	PLA
	BNE GCHRP4


RM_STR	LDX NXTAD		;REMOVE UNUSED STRINGS
	LDA NXTAD+1
RMSTR1	STX STREND
	STA STREND+1
	LDY #0
	STY DEFPNT+1
	STY DEFPNT
	LDA VTEND
	LDX VTEND+1
	STA BEGAD
	STX BEGAD+1
	LDA #STRTAB
	LDX #STRTAB/256
	STA T_PNT
	STX T_PNT+1
RMSTR3	CMP DES_PNT
	BEQ RMSTR2
	JSR SDELS1
	BEQ RMSTR3
RMSTR2	LDA #7
	STA GCMEM+3
	LDA VTBEG
	LDX VTBEG+1
	STA T_PNT
	STX T_PNT+1
RMSTR5	CPX ATBEG+1
	BNE RMSTR4
	CMP ATBEG
	BEQ RMSTR6
RMSTR4	JSR S_DELS
	BEQ RMSTR5
RMSTR6	STA TARGAD
	STX TARGAD+1
	LDA #3
	STA GCMEM+3
RMSTR8	LDA TARGAD
	LDX TARGAD+1
RMSTR11	CPX VTEND+1
	BNE RMSTR7
	CMP VTEND
	BNE RMSTR7
	JMP DEL_STR
RMSTR7	STA T_PNT
	STX T_PNT+1
	LDY #0
	LDA (T_PNT),Y
	TAX
	INY
	LDA (T_PNT),Y
	PHP
	INY
	LDA (T_PNT),Y
	ADC TARGAD
	STA TARGAD
	INY
	LDA (T_PNT),Y
	ADC TARGAD+1
	STA TARGAD+1
	PLP
	BPL RMSTR8
	TXA
	BMI RMSTR8
	INY
	LDA (T_PNT),Y
	LDY #0
	ASL A
	ADC #5
	ADC T_PNT
	STA T_PNT
	BCC RMSTR9
	INC T_PNT+1
RMSTR9	LDX T_PNT+1
RMSTR12	CPX TARGAD+1
	BNE RMSTR10
	CMP TARGAD
	BEQ RMSTR11
RMSTR10	JSR SDELS1
	BEQ RMSTR12


S_DELS	LDA (T_PNT),Y		;SEARCH STRING TO BE DELETED
	BMI SDELS5
	INY
	LDA (T_PNT),Y
	BPL SDELS5
	INY
SDELS1	LDA (T_PNT),Y
	BEQ SDELS5
	INY
	LDA (T_PNT),Y
	TAX
	INY
	LDA (T_PNT),Y
	CMP STREND+1
	BCC SDELS2
	BNE SDELS5
	CPX STREND
	BCS SDELS5
SDELS2	CMP BEGAD+1
	BCC SDELS5
	BNE SDELS3
	CPX BEGAD
	BCC SDELS5
SDELS3	STX BEGAD
	STA BEGAD+1
	LDA T_PNT
	LDX T_PNT+1
	STA DEFPNT
	STX DEFPNT+1
	LDA GCMEM+3
	STA J_FN+1
SDELS5	LDA GCMEM+3
	CLC
	ADC T_PNT
	STA T_PNT
	BCC SDELS4
	INC T_PNT+1
SDELS4	LDX T_PNT+1
	LDY #0
	RTS


DEL_STR	LDA DEFPNT+1		;DELETE STRING
	ORA DEFPNT
	BEQ SDELS4
	LDA J_FN+1
	AND #$04
	LSR A
	TAY
	STA J_FN+1
	LDA (DEFPNT),Y
	ADC BEGAD
	STA ENDAD
	LDA BEGAD+1
	ADC #0
	STA ENDAD+1
	LDA STREND
	LDX STREND+1
	STA TARGAD
	STX TARGAD+1
	JSR MOVE
	LDY J_FN+1
	INY
	LDA TARGAD
	STA (DEFPNT),Y
	TAX
	INC TARGAD+1
	LDA TARGAD+1
	INY
	STA (DEFPNT),Y
	JMP RMSTR1


CONCAT	LDA F_ACCU1+4		;CONCATENATE STRINGS
	PHA
	LDA F_ACCU1+3
	PHA
	JSR ANA_ARG
	JSR CHK_NU1
	PLA
	STA ACOMP
	PLA
	STA ACOMP+1
	LDY #0
	LDA (ACOMP),Y
	CLC
	ADC (F_ACCU1+3),Y
	BCC CONCAT1
	LDX #ERR13-ERR_TAB
	JMP ERROR

CONCAT1	JSR G_STRP
	JSR STR_MEM
	LDA GCMEM
	LDY GCMEM+1
	JSR GARCOL2
	JSR P_STR1
	LDA ACOMP
	LDY ACOMP+1
	JSR GARCOL2
	JSR S_STR10
	JMP IN_TER3


STR_MEM	LDY #0			;GET STRING TO MEMORY
	LDA (ACOMP),Y
	PHA
	INY
	LDA (ACOMP),Y
	TAX
	INY
	LDA (ACOMP),Y
	TAY
	PLA
P_STR	STX T_PNT		;PUSH STRING TO MEMORY
	STY T_PNT+1
P_STR1	TAY
	BEQ P_STR2
	PHA
P_STR3	DEY
	LDA (T_PNT),Y
	STA (STRBEG),Y
	TYA
	BNE P_STR3
	PLA
P_STR2	CLC
	ADC STRBEG
	STA STRBEG
	BCC P_STR4
	INC STRBEG+1
P_STR4	RTS


GARCOL	JSR CHK_NU1		;GARBAGE COLLECTION
GARCOL1	LDA F_ACCU1+3
	LDY F_ACCU1+4
GARCOL2	STA T_PNT
	STY T_PNT+1
	JSR FIX_DT
	PHP
	LDY #0
	LDA (T_PNT),Y
	PHA
	INY
	LDA (T_PNT),Y
	TAX
	INY
	LDA (T_PNT),Y
	TAY
	PLA
	PLP
	BNE GARCOL3
	CPY STREND+1
	BNE GARCOL3
	CPX STREND
	BNE GARCOL3
	PHA
	CLC
	ADC STREND
	STA STREND
	BCC GARCOL4
	INC STREND+1
GARCOL4	PLA
GARCOL3	STX T_PNT
	STY T_PNT+1
	RTS


FIX_DT	CPY L_STRP+1		;FIX DESCRIPTOR TABLE
	BNE FIXDTX
	CMP L_STRP
	BNE FIXDTX
	STA DES_PNT
	SBC #3
	STA L_STRP
	LDY #0
FIXDTX	RTS

	APP BASIC1.APP
